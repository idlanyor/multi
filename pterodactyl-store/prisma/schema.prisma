// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  password    String
  role        Role     @default(USER)
  fullName    String?
  phoneNumber String?
  whatsapp    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders  Order[]
  servers Server[]

  @@map("users")
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  category    Category
  ram         Int         // in GB
  cpu         Int         // percentage
  price       Int         // in IDR
  emoji       String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  orders Order[]

  @@map("products")
}

model Order {
  id            String      @id @default(cuid())
  userId        String
  productId     String
  status        OrderStatus @default(PENDING)
  duration      Int         @default(1) // in months
  totalPrice    Int
  paymentMethod String      @default("QRIS")
  paymentProof  String?
  notes         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  confirmedAt   DateTime?
  confirmedBy   String?

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
  server  Server?

  @@map("orders")
}

model Server {
  id              String      @id @default(cuid())
  orderId         String      @unique
  userId          String
  pterodactylId   Int?
  name            String
  status          ServerStatus @default(CREATING)
  pterodactylUser String?
  pterodactylPass String?
  panelUrl        String?
  expiresAt       DateTime
  isActive        Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("servers")
}

model Settings {
  id               String  @id @default(cuid())
  pterodactylUrl   String
  pterodactylApiKey String
  clientApiKey     String?
  qrisImage        String?
  paymentInfo      String?
  whatsappNumber   String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("settings")
}

enum Role {
  USER
  ADMIN
}

enum Category {
  NODEJS
  VPS
  PYTHON
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum ServerStatus {
  CREATING
  ACTIVE
  SUSPENDED
  EXPIRED
}
